// Programmers: Carl Dell, Kevin Stewart, Justin Pachter
// Description: Header file describing the loginView class. The loginView class
//				implements functions for use with the loginView.xib

#import "loginView.h"
#import "mainView.h"
#import "registerView.h"

@implementation loginView

@synthesize usernameField;	// Create setters and getters for UITextField properties
@synthesize passwordField;

- (void)viewDidLoad{
// POST: After view loads successfully, set class variable options
  
    passwordField.secureTextEntry = YES;	// Enable encryption on the password field
    usernameField.delegate = self;			// Direct messages generated by UITextFields
    passwordField.delegate = self;			// 	to the loginView class instance
    self.originalCenter = self.view.center  // Record center of view at view loading
    [super viewDidLoad];
	// Do any additional setup after loading the view, typically from a nib.
}

- (void)viewDidUnload
{
    // Deallocate fields
    [self setUsernameField:nil];
    [self setPasswordField:nil];
	// Release any retained subviews of the main view
    [super viewDidUnload];
}


- (void)textFieldDidBeginEditing:(UITextField *)textField {
// PRE:  textField is a pointer to the UITextField that has gained focus
// POST: Shifts the UITextField to the top of the screen, allowing visibility
//       even when the keyboard is displayed
    
    [UIView beginAnimations:nil context:NULL];	// Set animation settings
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDuration:0.5];
    [UIView setAnimationBeginsFromCurrentState:YES];
	
	// Create new point to which UITextField will animate
    self.view.center = CGPointMake(self.originalCenter.x, self.originalCenter.y - 90.0);
    [UIView commitAnimations];				    // Begin animations
    
}

- (void)textFieldDidEndEditing:(UITextField *)textField {
// PRE:  textField is a pointer to the UITextField that has lost focus
// POST: Shifts the UITextField to the position it was in prior to display of keyboard

    [UIView beginAnimations:nil context:NULL]; 	// Set animation settings
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDuration:0.5];
    [UIView setAnimationBeginsFromCurrentState:YES];
	
	
    self.view.center = self.originalCenter;		// Set center of view to the
												// original value set at view load
    [UIView commitAnimations];					// Begin animations
}

- (IBAction)loginClicked:(id)sender {
// PRE:  Sender is initialized
// POST: Sends a request to the database to login information based on the values of
//		 the usernameField and passwordField.

    NSString *userName;
	NSString *password;
    userName = usernameField.text;				// Create strings with values of
    password = passwordField.text;				// 	UITextFields
    
    // Format URL using constants
    NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"%@%@", hostURL,
															          verifyLoginScript]];
	
    // Build request object to communicate with web service
    ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:url];
	
	// Set Post values to be passed to PHP Scripts
    [request setPostValue:userName forKey:@"userName"];
    [request setPostValue:password forKey:@"password"];
	
	// Send any messages to this instance of loginView
    [request setDelegate:self];
	
    // Send request to web service
    [request startAsynchronous];
    
        
    
}

- (void)requestFinished:(ASIHTTPRequest *)request
// PRE:  Request is a pointer to the ASIHTTPRequest sent to web service
// POST: Switches views to mainView if login was valid, else displays an invalidAlert
{
    
    if(request.responseStatusCode == 200){   // Login was valid
        [self goToMain:nil];				 // Go to mainView 
    }
    else{									 // Username and password did not check out
											 // Generate new alert
        UIAlertView* invalidAlert = [loginView generateAlert:@"Invalid login"];
        [invalidAlert show];		    	 // Show the alert
    }
    
}

-(IBAction) goToMain:(id)sender{
// PRE:  Sender is initialized
// POST: New instance of mainView is created and set to current view
											 // Allocate new instance of mainView
    mainView *second = [[mainView alloc] initWithNibName: nil bundle:nil];
    
    second.user = self.usernameField.text;	 // Store current user
											 // Set current view to new mainView instance
    [self presentViewController:second animated:YES completion:nil];
}

-(IBAction) switchRegister:(id)sender{
// PRE:  Sender is initialized
// POST: New instance of registerView is created and set to current view
											 // Allocate new instance of registerView
    registerView *reg = [[registerView alloc] initWithNibName: nil bundle:nil];
											 // Set current view to new 
											 //	  registerView instance
    [self presentViewController:reg animated:YES completion:nil];
}

- (IBAction)dismissKeyboard:(id)sender {
// PRE:  Sender is initialized
// POST: Drops focus from the selected text field when clicking the invisible button,
//		 effectively dismissing the keyboard
    
    [usernameField resignFirstResponder]; 	 // Drop focus
    [passwordField resignFirstResponder];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:
											(UIInterfaceOrientation)interfaceOrientation{
// PRE:  interfaceOrientation is a UIInterfaceOrientation that determines valid display
//       options for the application
// POST: Sets interfaceOrientation to only allow portrait view
											 // Allow portrait view only
    return (interfaceOrientation != UIInterfaceOrientationPortraitUpsideDown);
}

// Class function to generate a generic alert with provided message
+(UIAlertView*)generateAlert:(NSString*)message{
// PRE:  message is an NSString pointer holding the text to display in the generated alert
// POST: Generates a new UIAlertView that will display the message passed and returns it
    
    UIAlertView* alert = [[UIAlertView alloc]initWithTitle: message
                                             message: nil
                                            delegate: self
                                   cancelButtonTitle:@"Ok"
                                   otherButtonTitles:nil];
    
    return alert;
    
}


@end
